{"ast":null,"code":"var colors = {\n  maroon: '#800000',\n  red: '#ff0000',\n  orange: '#ffA500',\n  yellow: '#ffff00',\n  olive: '#808000',\n  purple: '#800080',\n  fuchsia: \"#ff00ff\",\n  white: '#ffffff',\n  lime: '#00ff00',\n  green: '#008000',\n  navy: '#000080',\n  blue: '#0000ff',\n  aqua: '#00ffff',\n  teal: '#008080',\n  black: '#000000',\n  silver: '#c0c0c0',\n  gray: '#808080'\n};\n\nvar map = function (array, fn) {\n  var results = [];\n\n  for (var i = 0, l = array.length; i < l; i++) results[i] = fn(array[i], i);\n\n  return results;\n};\n\nvar Color = function (color, type) {\n  if (color.isColor) {\n    this.red = color.red;\n    this.green = color.green;\n    this.blue = color.blue;\n    this.alpha = color.alpha;\n  } else {\n    var namedColor = colors[color];\n\n    if (namedColor) {\n      color = namedColor;\n      type = 'hex';\n    }\n\n    switch (typeof color) {\n      case 'string':\n        if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';\n        break;\n\n      case 'object':\n        type = type || 'rgb';\n        color = color.toString();\n        break;\n\n      case 'number':\n        type = 'hex';\n        color = color.toString(16);\n        break;\n    }\n\n    color = Color['parse' + type.toUpperCase()](color);\n    this.red = color[0];\n    this.green = color[1];\n    this.blue = color[2];\n    this.alpha = color[3];\n  }\n\n  this.isColor = true;\n};\n\nvar limit = function (number, min, max) {\n  return Math.min(max, Math.max(min, number));\n};\n\nvar listMatch = /([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,?\\s*([-.\\d]*\\%?)/;\nvar hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;\n\nColor.parseRGB = function (color) {\n  return map(color.match(listMatch).slice(1), function (bit, i) {\n    if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);\n    return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);\n  });\n};\n\nColor.parseHEX = function (color) {\n  if (color.length == 1) color = color + color + color;\n  return map(color.match(hexMatch).slice(1), function (bit, i) {\n    if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;\n    return parseInt(bit.length == 1 ? bit + bit : bit, 16);\n  });\n};\n\nColor.parseHSB = function (color) {\n  var hsb = map(color.match(listMatch).slice(1), function (bit, i) {\n    if (bit) bit = parseFloat(bit);\n    if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);\n  });\n  var a = hsb[3];\n  var br = Math.round(hsb[2] / 100 * 255);\n  if (hsb[1] == 0) return [br, br, br, a];\n  var hue = hsb[0];\n  var f = hue % 60;\n  var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);\n  var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);\n  var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);\n\n  switch (Math.floor(hue / 60)) {\n    case 0:\n      return [br, t, p, a];\n\n    case 1:\n      return [q, br, p, a];\n\n    case 2:\n      return [p, br, t, a];\n\n    case 3:\n      return [p, q, br, a];\n\n    case 4:\n      return [t, p, br, a];\n\n    default:\n      return [br, p, q, a];\n  }\n};\n\nColor.parseHSL = function (color) {\n  var hsb = map(color.match(listMatch).slice(1), function (bit, i) {\n    if (bit) bit = parseFloat(bit);\n    if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);\n  });\n  var h = hsb[0] / 60;\n  var s = hsb[1] / 100;\n  var l = hsb[2] / 100;\n  var a = hsb[3];\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h % 2 - 1));\n  var m = l - c / 2;\n  var p = Math.round((c + m) * 255);\n  var q = Math.round((x + m) * 255);\n  var t = Math.round(m * 255);\n\n  switch (Math.floor(h)) {\n    case 0:\n      return [p, q, t, a];\n\n    case 1:\n      return [q, p, t, a];\n\n    case 2:\n      return [t, p, q, a];\n\n    case 3:\n      return [t, q, p, a];\n\n    case 4:\n      return [q, t, p, a];\n\n    default:\n      return [p, t, q, a];\n  }\n};\n\nvar toString = function (type, array) {\n  if (array[3] != 1) type += 'a';else array.pop();\n  return type + '(' + array.join(', ') + ')';\n};\n\nColor.prototype = {\n  toHSB: function (array) {\n    var red = this.red,\n        green = this.green,\n        blue = this.blue,\n        alpha = this.alpha;\n    var max = Math.max(red, green, blue),\n        min = Math.min(red, green, blue),\n        delta = max - min;\n    var hue = 0,\n        saturation = delta != 0 ? delta / max : 0,\n        brightness = max / 255;\n\n    if (saturation) {\n      var rr = (max - red) / delta,\n          gr = (max - green) / delta,\n          br = (max - blue) / delta;\n      hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;\n      if ((hue /= 6) < 0) hue++;\n    }\n\n    var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];\n    return array ? hsb : toString('hsb', hsb);\n  },\n  toHSL: function (array) {\n    var red = this.red,\n        green = this.green,\n        blue = this.blue,\n        alpha = this.alpha;\n    var max = Math.max(red, green, blue),\n        min = Math.min(red, green, blue),\n        delta = max - min;\n    var hue = 0,\n        saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,\n        lightness = (max + min) / 512;\n\n    if (saturation) {\n      var rr = (max - red) / delta,\n          gr = (max - green) / delta,\n          br = (max - blue) / delta;\n      hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;\n      if ((hue /= 6) < 0) hue++;\n    }\n\n    var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];\n    return array ? hsl : toString('hsl', hsl);\n  },\n  toHEX: function (array) {\n    var a = this.alpha;\n    var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;\n    var hex = map([this.red, this.green, this.blue], function (bit) {\n      bit = bit.toString(16);\n      return bit.length == 1 ? '0' + bit : bit;\n    });\n    return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);\n  },\n  toRGB: function (array) {\n    var rgb = [this.red, this.green, this.blue, this.alpha];\n    return array ? rgb : toString('rgb', rgb);\n  }\n};\nColor.prototype.toString = Color.prototype.toRGB;\n\nColor.hex = function (hex) {\n  return new Color(hex, 'hex');\n};\n\nif (this.hex == null) this.hex = Color.hex;\n\nColor.hsb = function (h, s, b, a) {\n  return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');\n};\n\nif (this.hsb == null) this.hsb = Color.hsb;\n\nColor.hsl = function (h, s, l, a) {\n  return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');\n};\n\nif (this.hsl == null) this.hsl = Color.hsl;\n\nColor.rgb = function (r, g, b, a) {\n  return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');\n};\n\nif (this.rgb == null) this.rgb = Color.rgb;\n\nColor.detach = function (color) {\n  color = new Color(color);\n  return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];\n};\n\nmodule.exports = Color;","map":{"version":3,"sources":["/Users/quickmac/Desktop/node_projects/react-native-web-workout/node_modules/art/core/color.js"],"names":["colors","maroon","red","orange","yellow","olive","purple","fuchsia","white","lime","green","navy","blue","aqua","teal","black","silver","gray","map","array","fn","results","i","l","length","Color","color","type","isColor","alpha","namedColor","match","toString","toUpperCase","limit","number","min","max","Math","listMatch","hexMatch","parseRGB","slice","bit","parseFloat","round","Number","parseHEX","parseInt","parseHSB","hsb","a","br","hue","f","p","q","t","floor","parseHSL","h","s","c","abs","x","m","pop","join","prototype","toHSB","delta","saturation","brightness","rr","gr","toHSL","lightness","hsl","toHEX","hex","concat","toRGB","rgb","b","r","g","detach","module","exports"],"mappings":"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","sourcesContent":["var colors = {\n\tmaroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',\n\tpurple: '#800080', fuchsia: \"#ff00ff\", white: '#ffffff', lime: '#00ff00', green: '#008000',\n\tnavy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',\n\tblack: '#000000', silver: '#c0c0c0', gray: '#808080'\n};\n\nvar map = function(array, fn){\n\tvar results = [];\n\tfor (var i = 0, l = array.length; i < l; i++)\n\t\tresults[i] = fn(array[i], i);\n\treturn results;\n};\n\nvar Color = function(color, type){\n\t\n\tif (color.isColor){\n\t\t\n\t\tthis.red = color.red;\n\t\tthis.green = color.green;\n\t\tthis.blue = color.blue;\n\t\tthis.alpha = color.alpha;\n\n\t} else {\n\t\t\n\t\tvar namedColor = colors[color];\n\t\tif (namedColor){\n\t\t\tcolor = namedColor;\n\t\t\ttype = 'hex';\n\t\t}\n\n\t\tswitch (typeof color){\n\t\t\tcase 'string': if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex'; break;\n\t\t\tcase 'object': type = type || 'rgb'; color = color.toString(); break;\n\t\t\tcase 'number': type = 'hex'; color = color.toString(16); break;\n\t\t}\n\n\t\tcolor = Color['parse' + type.toUpperCase()](color);\n\t\tthis.red = color[0];\n\t\tthis.green = color[1];\n\t\tthis.blue = color[2];\n\t\tthis.alpha = color[3];\n\t}\n\t\n\tthis.isColor = true;\n\n};\n\nvar limit = function(number, min, max){\n\treturn Math.min(max, Math.max(min, number));\n};\n\nvar listMatch = /([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,?\\s*([-.\\d]*\\%?)/;\nvar hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;\n\nColor.parseRGB = function(color){\n\treturn map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);\n\t\treturn (i < 3) ? Math.round(((bit %= 256) < 0) ? bit + 256 : bit) : limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n};\n\t\nColor.parseHEX = function(color){\n\tif (color.length == 1) color = color + color + color;\n\treturn map(color.match(hexMatch).slice(1), function(bit, i){\n\t\tif (i == 3) return (bit) ? parseInt(bit, 16) / 255 : 1;\n\t\treturn parseInt((bit.length == 1) ? bit + bit : bit, 16);\n\t});\n};\n\t\nColor.parseHSB = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\t\n\tvar a = hsb[3];\n\tvar br = Math.round(hsb[2] / 100 * 255);\n\tif (hsb[1] == 0) return [br, br, br, a];\n\t\t\n\tvar hue = hsb[0];\n\tvar f = hue % 60;\n\tvar p = Math.round((hsb[2] * (100 - hsb[1])) / 10000 * 255);\n\tvar q = Math.round((hsb[2] * (6000 - hsb[1] * f)) / 600000 * 255);\n\tvar t = Math.round((hsb[2] * (6000 - hsb[1] * (60 - f))) / 600000 * 255);\n\n\tswitch (Math.floor(hue / 60)){\n\t\tcase 0: return [br, t, p, a];\n\t\tcase 1: return [q, br, p, a];\n\t\tcase 2: return [p, br, t, a];\n\t\tcase 3: return [p, q, br, a];\n\t\tcase 4: return [t, p, br, a];\n\t\tdefault: return [br, p, q, a];\n\t}\n};\n\nColor.parseHSL = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\n\tvar h = hsb[0] / 60;\n\tvar s = hsb[1] / 100;\n\tvar l = hsb[2] / 100;\n\tvar a = hsb[3];\n\t\n\tvar c = (1 - Math.abs(2 * l - 1)) * s;\n\tvar x = c * (1 - Math.abs(h % 2 - 1));\n\tvar m = l - c / 2;\n\t\n\tvar p = Math.round((c + m) * 255);\n\tvar q = Math.round((x + m) * 255);\n\tvar t = Math.round((m) * 255);\n\n\tswitch (Math.floor(h)){\n\t\tcase 0: return [p, q, t, a];\n\t\tcase 1: return [q, p, t, a];\n\t\tcase 2: return [t, p, q, a];\n\t\tcase 3: return [t, q, p, a];\n\t\tcase 4: return [q, t, p, a];\n\t\tdefault: return [p, t, q, a];\n\t}\n};\n\nvar toString = function(type, array){\n\tif (array[3] != 1) type += 'a';\n\telse array.pop();\n\treturn type + '(' + array.join(', ') + ')';\n};\n\nColor.prototype = {\n\n\ttoHSB: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / max : 0, brightness = max / 255;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];\n\n\t\treturn (array) ? hsb : toString('hsb', hsb);\n\t},\n\n\ttoHSL: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / (255 - Math.abs((max + min) - 255)) : 0, lightness = (max + min) / 512;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];\n\n\t\treturn (array) ? hsl : toString('hsl', hsl);\n\t},\n\n\ttoHEX: function(array){\n\n\t\tvar a = this.alpha;\n\t\tvar alpha = ((a = Math.round((a * 255)).toString(16)).length == 1) ? a + a : a;\n\t\t\n\t\tvar hex = map([this.red, this.green, this.blue], function(bit){\n\t\t\tbit = bit.toString(16);\n\t\t\treturn (bit.length == 1) ? '0' + bit : bit;\n\t\t});\n\t\t\n\t\treturn (array) ? hex.concat(alpha) : '#' + hex.join('') + ((alpha == 'ff') ? '' : alpha);\n\t},\n\t\n\ttoRGB: function(array){\n\t\tvar rgb = [this.red, this.green, this.blue, this.alpha];\n\t\treturn (array) ? rgb : toString('rgb', rgb);\n\t}\n\n};\n\nColor.prototype.toString = Color.prototype.toRGB;\n\nColor.hex = function(hex){\n\treturn new Color(hex, 'hex');\n};\n\nif (this.hex == null) this.hex = Color.hex;\n\nColor.hsb = function(h, s, b, a){\n\treturn new Color([h || 0, s || 0, b || 0, (a == null) ? 1 : a], 'hsb');\n};\n\nif (this.hsb == null) this.hsb = Color.hsb;\n\nColor.hsl = function(h, s, l, a){\n\treturn new Color([h || 0, s || 0, l || 0, (a == null) ? 1 : a], 'hsl');\n};\n\nif (this.hsl == null) this.hsl = Color.hsl;\n\nColor.rgb = function(r, g, b, a){\n\treturn new Color([r || 0, g || 0, b || 0, (a == null) ? 1 : a], 'rgb');\n};\n\nif (this.rgb == null) this.rgb = Color.rgb;\n\nColor.detach = function(color){\n\tcolor = new Color(color);\n\treturn [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];\n};\n\nmodule.exports = Color;"]},"metadata":{},"sourceType":"script"}