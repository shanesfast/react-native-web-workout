{"ast":null,"code":"var Class = require('./class');\n\nmodule.exports = Class({\n  initialize: function (path) {\n    this.reset().push(path);\n  },\n\n  /* parser */\n  push: function () {\n    var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+/ig);\n    if (!p) return this;\n    var last,\n        cmd = p[0],\n        i = 1;\n\n    while (cmd) {\n      switch (cmd) {\n        case 'm':\n          this.move(p[i++], p[i++]);\n          break;\n\n        case 'l':\n          this.line(p[i++], p[i++]);\n          break;\n\n        case 'c':\n          this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);\n          break;\n\n        case 's':\n          this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);\n          break;\n\n        case 'q':\n          this.curve(p[i++], p[i++], p[i++], p[i++]);\n          break;\n\n        case 't':\n          this.curve(p[i++], p[i++]);\n          break;\n\n        case 'a':\n          this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);\n          i += 7;\n          break;\n\n        case 'h':\n          this.line(p[i++], 0);\n          break;\n\n        case 'v':\n          this.line(0, p[i++]);\n          break;\n\n        case 'M':\n          this.moveTo(p[i++], p[i++]);\n          break;\n\n        case 'L':\n          this.lineTo(p[i++], p[i++]);\n          break;\n\n        case 'C':\n          this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);\n          break;\n\n        case 'S':\n          this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);\n          break;\n\n        case 'Q':\n          this.curveTo(p[i++], p[i++], p[i++], p[i++]);\n          break;\n\n        case 'T':\n          this.curveTo(p[i++], p[i++]);\n          break;\n\n        case 'A':\n          this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);\n          i += 7;\n          break;\n\n        case 'H':\n          this.lineTo(p[i++], this.penY);\n          break;\n\n        case 'V':\n          this.lineTo(this.penX, p[i++]);\n          break;\n\n        case 'Z':\n        case 'z':\n          this.close();\n          break;\n\n        default:\n          cmd = last;\n          i--;\n          continue;\n      }\n\n      last = cmd;\n      if (last == 'm') last = 'l';else if (last == 'M') last = 'L';\n      cmd = p[i++];\n    }\n\n    return this;\n  },\n\n  /* utility methods */\n  reset: function () {\n    this.penX = this.penY = 0;\n    this.penDownX = this.penDownY = null;\n    this._pivotX = this._pivotY = 0;\n    this.onReset();\n    return this;\n  },\n  move: function (x, y) {\n    this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);\n    return this;\n  },\n  moveTo: function (x, y) {\n    this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);\n    return this;\n  },\n  line: function (x, y) {\n    return this.lineTo(this.penX + +x, this.penY + +y);\n  },\n  lineTo: function (x, y) {\n    if (this.penDownX == null) {\n      this.penDownX = this.penX;\n      this.penDownY = this.penY;\n    }\n\n    this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);\n    return this;\n  },\n  curve: function (c1x, c1y, c2x, c2y, ex, ey) {\n    var x = this.penX,\n        y = this.penY;\n    return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);\n  },\n  curveTo: function (c1x, c1y, c2x, c2y, ex, ey) {\n    var x = this.penX,\n        y = this.penY;\n\n    if (c2x == null) {\n      c2x = +c1x;\n      c2y = +c1y;\n      c1x = x * 2 - (this._pivotX || 0);\n      c1y = y * 2 - (this._pivotY || 0);\n    }\n\n    if (ex == null) {\n      this._pivotX = +c1x;\n      this._pivotY = +c1y;\n      ex = +c2x;\n      ey = +c2y;\n      c2x = (ex + +c1x * 2) / 3;\n      c2y = (ey + +c1y * 2) / 3;\n      c1x = (x + +c1x * 2) / 3;\n      c1y = (y + +c1y * 2) / 3;\n    } else {\n      this._pivotX = +c2x;\n      this._pivotY = +c2y;\n    }\n\n    if (this.penDownX == null) {\n      this.penDownX = x;\n      this.penDownY = y;\n    }\n\n    this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);\n    return this;\n  },\n  arc: function (x, y, rx, ry, outer, counterClockwise, rotation) {\n    return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);\n  },\n  arcTo: function (x, y, rx, ry, outer, counterClockwise, rotation) {\n    ry = Math.abs(+ry || +rx || +y - this.penY);\n    rx = Math.abs(+rx || +x - this.penX);\n    if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);\n    var tX = this.penX,\n        tY = this.penY,\n        clockwise = !+counterClockwise,\n        large = !!+outer;\n    var rad = rotation ? rotation * Math.PI / 180 : 0,\n        cos = Math.cos(rad),\n        sin = Math.sin(rad);\n    x -= tX;\n    y -= tY; // Ellipse Center\n\n    var cx = cos * x / 2 + sin * y / 2,\n        cy = -sin * x / 2 + cos * y / 2,\n        rxry = rx * rx * ry * ry,\n        rycx = ry * ry * cx * cx,\n        rxcy = rx * rx * cy * cy,\n        a = rxry - rxcy - rycx;\n\n    if (a < 0) {\n      a = Math.sqrt(1 - a / rxry);\n      rx *= a;\n      ry *= a;\n      cx = x / 2;\n      cy = y / 2;\n    } else {\n      a = Math.sqrt(a / (rxcy + rycx));\n      if (large == clockwise) a = -a;\n      var cxd = -a * cy * rx / ry,\n          cyd = a * cx * ry / rx;\n      cx = cos * cxd - sin * cyd + x / 2;\n      cy = sin * cxd + cos * cyd + y / 2;\n    } // Rotation + Scale Transform\n\n\n    var xx = cos / rx,\n        yx = sin / rx,\n        xy = -sin / ry,\n        yy = cos / ry; // Start and End Angle\n\n    var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),\n        ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));\n    cx += tX;\n    cy += tY;\n    x += tX;\n    y += tY; // Circular Arc\n\n    if (this.penDownX == null) {\n      this.penDownX = this.penX;\n      this.penDownY = this.penY;\n    }\n\n    this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);\n    return this;\n  },\n  counterArc: function (x, y, rx, ry, outer) {\n    return this.arc(x, y, rx, ry, outer, true);\n  },\n  counterArcTo: function (x, y, rx, ry, outer) {\n    return this.arcTo(x, y, rx, ry, outer, true);\n  },\n  close: function () {\n    if (this.penDownX != null) {\n      this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);\n      this.penDownX = null;\n    }\n\n    return this;\n  },\n\n  /* overridable handlers */\n  onReset: function () {},\n  onMove: function (sx, sy, ex, ey) {},\n  onLine: function (sx, sy, ex, ey) {\n    this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);\n  },\n  onBezierCurve: function (sx, sy, c1x, c1y, c2x, c2y, ex, ey) {\n    var gx = ex - sx,\n        gy = ey - sy,\n        g = gx * gx + gy * gy,\n        v1,\n        v2,\n        cx,\n        cy,\n        u;\n    cx = c1x - sx;\n    cy = c1y - sy;\n    u = cx * gx + cy * gy;\n\n    if (u > g) {\n      cx -= gx;\n      cy -= gy;\n    } else if (u > 0 && g != 0) {\n      cx -= u / g * gx;\n      cy -= u / g * gy;\n    }\n\n    v1 = cx * cx + cy * cy;\n    cx = c2x - sx;\n    cy = c2y - sy;\n    u = cx * gx + cy * gy;\n\n    if (u > g) {\n      cx -= gx;\n      cy -= gy;\n    } else if (u > 0 && g != 0) {\n      cx -= u / g * gx;\n      cy -= u / g * gy;\n    }\n\n    v2 = cx * cx + cy * cy;\n\n    if (v1 < 0.01 && v2 < 0.01) {\n      this.onLine(sx, sy, ex, ey);\n      return;\n    } // Avoid infinite recursion\n\n\n    if (isNaN(v1) || isNaN(v2)) {\n      throw new Error('Bad input');\n    } // Split curve\n\n\n    var s1x = (c1x + c2x) * 0.5,\n        s1y = (c1y + c2y) * 0.5,\n        l1x = (c1x + sx) * 0.5,\n        l1y = (c1y + sy) * 0.5,\n        l2x = (l1x + s1x) * 0.5,\n        l2y = (l1y + s1y) * 0.5,\n        r2x = (ex + c2x) * 0.5,\n        r2y = (ey + c2y) * 0.5,\n        r1x = (r2x + s1x) * 0.5,\n        r1y = (r2y + s1y) * 0.5,\n        l2r1x = (l2x + r1x) * 0.5,\n        l2r1y = (l2y + r1y) * 0.5; // TODO: Manual stack if necessary. Currently recursive without tail optimization.\n\n    this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);\n    this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);\n  },\n  onArc: function (sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {\n    // Inverse Rotation + Scale Transform\n    var rad = rotation ? rotation * Math.PI / 180 : 0,\n        cos = Math.cos(rad),\n        sin = Math.sin(rad),\n        xx = cos * rx,\n        yx = -sin * ry,\n        xy = sin * rx,\n        yy = cos * ry; // Bezier Curve Approximation\n\n    var arc = ea - sa;\n    if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;\n    var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),\n        step = arc / n,\n        k = 4 / 3 * Math.tan(step / 4);\n    var x = Math.cos(sa),\n        y = Math.sin(sa);\n\n    for (var i = 0; i < n; i++) {\n      var cp1x = x - k * y,\n          cp1y = y + k * x;\n      sa += step;\n      x = Math.cos(sa);\n      y = Math.sin(sa);\n      var cp2x = x + k * y,\n          cp2y = y - k * x;\n      this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);\n    }\n  },\n  onClose: function (sx, sy, ex, ey) {\n    this.onLine(sx, sy, ex, ey);\n  }\n});","map":{"version":3,"sources":["/Users/quickmac/Desktop/node_projects/react-native-web-workout/node_modules/art/core/path.js"],"names":["Class","require","module","exports","initialize","path","reset","push","p","Array","prototype","join","call","arguments","match","last","cmd","i","move","line","curve","arc","moveTo","lineTo","curveTo","arcTo","penY","penX","close","penDownX","penDownY","_pivotX","_pivotY","onReset","x","y","onMove","onLine","c1x","c1y","c2x","c2y","ex","ey","onBezierCurve","rx","ry","outer","counterClockwise","rotation","Math","abs","tX","tY","clockwise","large","rad","PI","cos","sin","cx","cy","rxry","rycx","rxcy","a","sqrt","cxd","cyd","xx","yx","xy","yy","sa","atan2","ea","onArc","counterArc","counterArcTo","onClose","sx","sy","gx","gy","g","v1","v2","u","isNaN","Error","s1x","s1y","l1x","l1y","l2x","l2y","r2x","r2y","r1x","r1y","l2r1x","l2r1y","ccw","n","ceil","step","k","tan","cp1x","cp1y","cp2x","cp2y"],"mappings":"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","sourcesContent":["var Class = require('./class');\n\nmodule.exports = Class({\n\t\n\tinitialize: function(path){\n\t\tthis.reset().push(path);\n\t},\n\n\t/* parser */\n\t\n\tpush: function(){\n\t\tvar p = Array.prototype.join.call(arguments, ' ')\n\t\t\t.match(/[a-df-z]|[\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+/ig);\n\t\tif (!p) return this;\n\n\t\tvar last, cmd = p[0], i = 1;\n\t\twhile (cmd){\n\t\t\tswitch (cmd){\n\t\t\t\tcase 'm': this.move(p[i++], p[i++]); break;\n\t\t\t\tcase 'l': this.line(p[i++], p[i++]); break;\n\t\t\t\tcase 'c': this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 's': this.curve(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'q': this.curve(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 't': this.curve(p[i++], p[i++]); break;\n\t\t\t\tcase 'a': this.arc(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'h': this.line(p[i++], 0); break;\n\t\t\t\tcase 'v': this.line(0, p[i++]); break;\n\n\t\t\t\tcase 'M': this.moveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'L': this.lineTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'C': this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'S': this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'Q': this.curveTo(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'T': this.curveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'A': this.arcTo(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'H': this.lineTo(p[i++], this.penY); break;\n\t\t\t\tcase 'V': this.lineTo(this.penX, p[i++]); break;\n\t\t\t\t\n\t\t\t\tcase 'Z': case 'z': this.close(); break;\n\t\t\t\tdefault: cmd = last; i--; continue;\n\t\t\t}\n\n\t\t\tlast = cmd;\n\t\t\tif (last == 'm') last = 'l';\n\t\t\telse if (last == 'M') last = 'L';\n\t\t\tcmd = p[i++];\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* utility methods */\n\n\treset: function(){\n\t\tthis.penX = this.penY = 0;\n\t\tthis.penDownX = this.penDownY = null;\n\t\tthis._pivotX = this._pivotY = 0;\n\t\tthis.onReset();\n\t\treturn this;\n\t},\n\t\n\tmove: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX += (+x), this._pivotY = this.penY += (+y));\n\t\treturn this;\n\t},\n\tmoveTo: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\n\tline: function(x,y){\n\t\treturn this.lineTo(this.penX + (+x), this.penY + (+y));\n\t},\n\tlineTo: function(x,y){\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onLine(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\t\n\tcurve: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\treturn this.curveTo(\n\t\t\tx + (+c1x), y + (+c1y),\n\t\t\tc2x == null ? null : x + (+c2x),\n\t\t\tc2y == null ? null : y + (+c2y),\n\t\t\tex == null ? null : x + (+ex),\n\t\t\tey == null ? null : y + (+ey)\n\t\t);\n\t},\n\tcurveTo: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\tif (c2x == null){\n\t\t\tc2x = +c1x; c2y = +c1y;\n\t\t\tc1x = (x * 2) - (this._pivotX || 0); c1y = (y * 2) - (this._pivotY || 0);\n\t\t}\n\t\tif (ex == null){\n\t\t\tthis._pivotX = +c1x; this._pivotY = +c1y;\n\t\t\tex = +c2x; ey = +c2y;\n\t\t\tc2x = (ex + (+c1x) * 2) / 3; c2y = (ey + (+c1y) * 2) / 3;\n\t\t\tc1x = (x + (+c1x) * 2) / 3; c1y = (y + (+c1y) * 2) / 3;\n\t\t} else {\n\t\t\tthis._pivotX = +c2x; this._pivotY = +c2y;\n\t\t}\n\t\tif (this.penDownX == null){ this.penDownX = x; this.penDownY = y; }\n\t\tthis.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);\n\t\treturn this;\n\t},\n\t\n\tarc: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\treturn this.arcTo(this.penX + (+x), this.penY + (+y), rx, ry, outer, counterClockwise, rotation);\n\t},\n\tarcTo: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\try = Math.abs(+ry || +rx || (+y - this.penY));\n\t\trx = Math.abs(+rx || (+x - this.penX));\n\n\t\tif (!rx || !ry || (x == this.penX && y == this.penY)) return this.lineTo(x, y);\n\n\t\tvar tX = this.penX, tY = this.penY, clockwise = !+counterClockwise, large = !!+outer;\n\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad);\n\t\tx -= tX; y -= tY;\n\t\t\n\t\t// Ellipse Center\n\t\tvar cx = cos * x / 2 + sin * y / 2,\n\t\t\tcy = -sin * x / 2 + cos * y / 2,\n\t\t\trxry = rx * rx * ry * ry,\n\t\t\trycx = ry * ry * cx * cx,\n\t\t\trxcy = rx * rx * cy * cy,\n\t\t\ta = rxry - rxcy - rycx;\n\n\t\tif (a < 0){\n\t\t\ta = Math.sqrt(1 - a / rxry);\n\t\t\trx *= a; ry *= a;\n\t\t\tcx = x / 2; cy = y / 2;\n\t\t} else {\n\t\t\ta = Math.sqrt(a / (rxcy + rycx));\n\t\t\tif (large == clockwise) a = -a;\n\t\t\tvar cxd = -a * cy * rx / ry,\n\t\t\t    cyd =  a * cx * ry / rx;\n\t\t\tcx = cos * cxd - sin * cyd + x / 2;\n\t\t\tcy = sin * cxd + cos * cyd + y / 2;\n\t\t}\n\n\t\t// Rotation + Scale Transform\n\t\tvar xx =  cos / rx, yx = sin / rx,\n\t\t    xy = -sin / ry, yy = cos / ry;\n\n\t\t// Start and End Angle\n\t\tvar sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),\n\t\t    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));\n\n\t\tcx += tX; cy += tY;\n\t\tx += tX; y += tY;\n\n\t\t// Circular Arc\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onArc(\n\t\t\ttX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y,\n\t\t\tcx, cy, rx, ry, sa, ea, !clockwise, rotation\n\t\t);\n\t\treturn this;\n\t},\n\n\tcounterArc: function(x, y, rx, ry, outer){\n\t\treturn this.arc(x, y, rx, ry, outer, true);\n\t},\n\tcounterArcTo: function(x, y, rx, ry, outer){\n\t\treturn this.arcTo(x, y, rx, ry, outer, true);\n\t},\n\n\tclose: function(){\n\t\tif (this.penDownX != null){\n\t\t\tthis.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);\n\t\t\tthis.penDownX = null;\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* overridable handlers */\n\t\n\tonReset: function(){\n\t},\n\n\tonMove: function(sx, sy, ex, ey){\n\t},\n\n\tonLine: function(sx, sy, ex, ey){\n\t\tthis.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);\n\t},\n\n\tonBezierCurve: function(sx, sy, c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar gx = ex - sx, gy = ey - sy,\n\t\t\tg = gx * gx + gy * gy,\n\t\t\tv1, v2, cx, cy, u;\n\n\t\tcx = c1x - sx; cy = c1y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv1 = cx * cx + cy * cy;\n\n\t\tcx = c2x - sx; cy = c2y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv2 = cx * cx + cy * cy;\n\n\t\tif (v1 < 0.01 && v2 < 0.01){\n\t\t\tthis.onLine(sx, sy, ex, ey);\n\t\t\treturn;\n\t\t}\n\n\t\t// Avoid infinite recursion\n\t\tif (isNaN(v1) || isNaN(v2)){\n\t\t\tthrow new Error('Bad input');\n\t\t}\n\n\t\t// Split curve\n\t\tvar s1x =   (c1x + c2x) * 0.5,   s1y =   (c1y + c2y) * 0.5,\n\t\t    l1x =   (c1x + sx)  * 0.5,   l1y =   (c1y + sy)  * 0.5,\n\t\t    l2x =   (l1x + s1x) * 0.5,   l2y =   (l1y + s1y) * 0.5,\n\t\t    r2x =   (ex + c2x)  * 0.5,   r2y =   (ey + c2y)  * 0.5,\n\t\t    r1x =   (r2x + s1x) * 0.5,   r1y =   (r2y + s1y) * 0.5,\n\t\t    l2r1x = (l2x + r1x) * 0.5,   l2r1y = (l2y + r1y) * 0.5;\n\n\t\t// TODO: Manual stack if necessary. Currently recursive without tail optimization.\n\t\tthis.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);\n\t\tthis.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);\n\t},\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\t// Inverse Rotation + Scale Transform\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad),\n\t\t\txx = cos * rx, yx = -sin * ry,\n\t\t    xy = sin * rx, yy =  cos * ry;\n\n\t\t// Bezier Curve Approximation\n\t\tvar arc = ea - sa;\n\t\tif (arc < 0 && !ccw) arc += Math.PI * 2;\n\t\telse if (arc > 0 && ccw) arc -= Math.PI * 2;\n\n\t\tvar n = Math.ceil(Math.abs(arc / (Math.PI / 2))),\n\t\t    step = arc / n,\n\t\t    k = (4 / 3) * Math.tan(step / 4);\n\n\t\tvar x = Math.cos(sa), y = Math.sin(sa);\n\n\t\tfor (var i = 0; i < n; i++){\n\t\t\tvar cp1x = x - k * y, cp1y = y + k * x;\n\n\t\t\tsa += step;\n\t\t\tx = Math.cos(sa); y = Math.sin(sa);\n\n\t\t\tvar cp2x = x + k * y, cp2y = y - k * x;\n\n\t\t\tthis.onBezierCurve(\n\t\t\t\tsx, sy,\n\t\t\t\tcx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y,\n\t\t\t\tcx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y,\n\t\t\t\t(sx = (cx + xx * x + yx * y)), (sy = (cy + xy * x + yy * y))\n\t\t\t);\n\t\t}\n\t},\n\n\tonClose: function(sx, sy, ex, ey){\n\t\tthis.onLine(sx, sy, ex, ey);\n\t}\n\n});"]},"metadata":{},"sourceType":"script"}