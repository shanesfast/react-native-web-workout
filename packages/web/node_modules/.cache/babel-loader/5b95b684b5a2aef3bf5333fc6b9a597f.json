{"ast":null,"code":"var Class = require('../../core/class');\n\nvar Base = require('./base');\n\nvar fontAnchors = {\n  middle: 'center'\n};\nmodule.exports = Class(Base, {\n  base_initialize: Base.prototype.initialize,\n  initialize: function (text, font, alignment, path) {\n    this.base_initialize();\n    this.draw.apply(this, arguments);\n  },\n  draw: function (text, font, alignment, path) {\n    var em;\n\n    if (typeof font == 'string') {\n      em = Number(/(\\d+)/.exec(font)[0]);\n    } else if (font) {\n      em = parseFloat(font.fontSize || font['font-size'] || '12');\n      font = (font.fontStyle || font['font-style'] || '') + ' ' + (font.fontVariant || font['font-variant'] || '') + ' ' + (font.fontWeight || font['font-weight'] || '') + ' ' + em + 'px ' + (font.fontFamily || font['font-family'] || 'Arial');\n    } else {\n      font = this._font;\n    }\n\n    var lines = text && text.split(/\\r?\\n/);\n    this._font = font;\n    this._fontSize = em;\n    this._text = lines;\n    this._alignment = fontAnchors[alignment] || alignment || 'left';\n    var context = Base._genericContext;\n    context.font = this._font;\n    context.textAlign = this._alignment;\n    context.textBaseline = 'middle';\n    lines = this._text;\n    var l = lines.length,\n        width = 0;\n\n    for (var i = 0; i < l; i++) {\n      var w = context.measureText(lines[i]).width;\n      if (w > width) width = w;\n    }\n\n    this.width = width;\n    this.height = l ? l * 1.1 * em : 0;\n    return this.invalidate();\n  },\n  // Interaction\n  localHitTest: function (x, y) {\n    if (!this._fill) return null;\n\n    if (x > 0 && y > 0 && x < this.width && y < this.height) {\n      return this;\n    }\n\n    return null;\n  },\n  // Rendering\n  renderShapeTo: function (context) {\n    if (this._invisible || !this._text || !this._fill && !this._stroke) {\n      return null;\n    }\n\n    context.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n    var fill = this._fill,\n        stroke = this._stroke,\n        text = this._text,\n        dash = this._strokeDash;\n    context.font = this._font;\n    context.textAlign = this._alignment;\n    context.textBaseline = 'middle';\n    var em = this._fontSize,\n        y = em / 2,\n        lineHeight = 1.1 * em,\n        lines = text,\n        l = lines.length;\n\n    if (fill) {\n      context.fillStyle = fill;\n\n      for (var i = 0; i < l; i++) context.fillText(lines[i], 0, y + i * lineHeight);\n    }\n\n    if (stroke) {\n      if (dash) {\n        if (context.setLineDash) {\n          context.setLineDash(dash);\n        } else {\n          // TODO: Remove when FF supports setLineDash.\n          context.mozDash = dash;\n        } // TODO: Create fallback to other browsers.\n\n      } else {\n        if (context.setLineDash) {\n          context.setLineDash([]);\n        } else {\n          context.mozDash = null;\n        }\n      }\n\n      context.strokeStyle = stroke;\n      context.lineWidth = this._strokeWidth;\n      context.lineCap = this._strokeCap;\n      context.lineJoin = this._strokeJoin;\n\n      for (i = 0; i < l; i++) context.strokeText(lines[i], 0, y + i * lineHeight);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/quickmac/Desktop/node_projects/react-native-web-workout/node_modules/art/modes/canvas/text.js"],"names":["Class","require","Base","fontAnchors","middle","module","exports","base_initialize","prototype","initialize","text","font","alignment","path","draw","apply","arguments","em","Number","exec","parseFloat","fontSize","fontStyle","fontVariant","fontWeight","fontFamily","_font","lines","split","_fontSize","_text","_alignment","context","_genericContext","textAlign","textBaseline","l","length","width","i","w","measureText","height","invalidate","localHitTest","x","y","_fill","renderShapeTo","_invisible","_stroke","transform","xx","yx","xy","yy","fill","stroke","dash","_strokeDash","lineHeight","fillStyle","fillText","setLineDash","mozDash","strokeStyle","lineWidth","_strokeWidth","lineCap","_strokeCap","lineJoin","_strokeJoin","strokeText"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AAEA,IAAIE,WAAW,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBN,KAAK,CAACE,IAAD,EAAO;AAE5BK,EAAAA,eAAe,EAAEL,IAAI,CAACM,SAAL,CAAeC,UAFJ;AAI5BA,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAeC,IAAf,EAAqBC,SAArB,EAAgCC,IAAhC,EAAqC;AAChD,SAAKN,eAAL;AACA,SAAKO,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB;AACA,GAP2B;AAS5BF,EAAAA,IAAI,EAAE,UAASJ,IAAT,EAAeC,IAAf,EAAqBC,SAArB,EAAgCC,IAAhC,EAAqC;AAC1C,QAAII,EAAJ;;AACA,QAAI,OAAON,IAAP,IAAe,QAAnB,EAA4B;AAC3BM,MAAAA,EAAE,GAAGC,MAAM,CAAC,QAAQC,IAAR,CAAaR,IAAb,EAAmB,CAAnB,CAAD,CAAX;AACA,KAFD,MAEO,IAAIA,IAAJ,EAAS;AACfM,MAAAA,EAAE,GAAGG,UAAU,CAACT,IAAI,CAACU,QAAL,IAAiBV,IAAI,CAAC,WAAD,CAArB,IAAsC,IAAvC,CAAf;AACAA,MAAAA,IAAI,GAAG,CAACA,IAAI,CAACW,SAAL,IAAkBX,IAAI,CAAC,YAAD,CAAtB,IAAwC,EAAzC,IAA+C,GAA/C,IACLA,IAAI,CAACY,WAAL,IAAoBZ,IAAI,CAAC,cAAD,CAAxB,IAA4C,EADvC,IAC6C,GAD7C,IAELA,IAAI,CAACa,UAAL,IAAmBb,IAAI,CAAC,aAAD,CAAvB,IAA0C,EAFrC,IAE2C,GAF3C,GAGNM,EAHM,GAGD,KAHC,IAILN,IAAI,CAACc,UAAL,IAAmBd,IAAI,CAAC,aAAD,CAAvB,IAA0C,OAJrC,CAAP;AAKA,KAPM,MAOA;AACNA,MAAAA,IAAI,GAAG,KAAKe,KAAZ;AACA;;AAED,QAAIC,KAAK,GAAGjB,IAAI,IAAIA,IAAI,CAACkB,KAAL,CAAW,OAAX,CAApB;AACA,SAAKF,KAAL,GAAaf,IAAb;AACA,SAAKkB,SAAL,GAAiBZ,EAAjB;AACA,SAAKa,KAAL,GAAaH,KAAb;AACA,SAAKI,UAAL,GAAkB5B,WAAW,CAACS,SAAD,CAAX,IAA0BA,SAA1B,IAAuC,MAAzD;AAEA,QAAIoB,OAAO,GAAG9B,IAAI,CAAC+B,eAAnB;AAEAD,IAAAA,OAAO,CAACrB,IAAR,GAAe,KAAKe,KAApB;AACAM,IAAAA,OAAO,CAACE,SAAR,GAAoB,KAAKH,UAAzB;AACAC,IAAAA,OAAO,CAACG,YAAR,GAAuB,QAAvB;AAEAR,IAAAA,KAAK,GAAG,KAAKG,KAAb;AACA,QAAIM,CAAC,GAAGT,KAAK,CAACU,MAAd;AAAA,QAAsBC,KAAK,GAAG,CAA9B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA2B;AAC1B,UAAIC,CAAC,GAAGR,OAAO,CAACS,WAAR,CAAoBd,KAAK,CAACY,CAAD,CAAzB,EAA8BD,KAAtC;AACA,UAAIE,CAAC,GAAGF,KAAR,EAAeA,KAAK,GAAGE,CAAR;AACf;;AACD,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKI,MAAL,GAAcN,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUnB,EAAb,GAAkB,CAAjC;AACA,WAAO,KAAK0B,UAAL,EAAP;AACA,GA7C2B;AA+C5B;AAEAC,EAAAA,YAAY,EAAE,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC3B,QAAI,CAAC,KAAKC,KAAV,EAAiB,OAAO,IAAP;;AACjB,QAAIF,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBD,CAAC,GAAG,KAAKP,KAA3B,IAAoCQ,CAAC,GAAG,KAAKJ,MAAjD,EAAwD;AACvD,aAAO,IAAP;AACA;;AACD,WAAO,IAAP;AACA,GAvD2B;AAyD5B;AAEAM,EAAAA,aAAa,EAAE,UAAShB,OAAT,EAAiB;AAC/B,QAAI,KAAKiB,UAAL,IAAmB,CAAC,KAAKnB,KAAzB,IAAmC,CAAC,KAAKiB,KAAN,IAAe,CAAC,KAAKG,OAA5D,EAAsE;AACrE,aAAO,IAAP;AACA;;AACDlB,IAAAA,OAAO,CAACmB,SAAR,CAAkB,KAAKC,EAAvB,EAA2B,KAAKC,EAAhC,EAAoC,KAAKC,EAAzC,EAA6C,KAAKC,EAAlD,EAAsD,KAAKV,CAA3D,EAA8D,KAAKC,CAAnE;AACA,QAAIU,IAAI,GAAG,KAAKT,KAAhB;AAAA,QACIU,MAAM,GAAG,KAAKP,OADlB;AAAA,QAEIxC,IAAI,GAAG,KAAKoB,KAFhB;AAAA,QAGI4B,IAAI,GAAG,KAAKC,WAHhB;AAKA3B,IAAAA,OAAO,CAACrB,IAAR,GAAe,KAAKe,KAApB;AACAM,IAAAA,OAAO,CAACE,SAAR,GAAoB,KAAKH,UAAzB;AACAC,IAAAA,OAAO,CAACG,YAAR,GAAuB,QAAvB;AAEA,QAAIlB,EAAE,GAAG,KAAKY,SAAd;AAAA,QACIiB,CAAC,GAAG7B,EAAE,GAAG,CADb;AAAA,QAEI2C,UAAU,GAAG,MAAM3C,EAFvB;AAAA,QAGIU,KAAK,GAAGjB,IAHZ;AAAA,QAII0B,CAAC,GAAGT,KAAK,CAACU,MAJd;;AAMA,QAAImB,IAAJ,EAAS;AACRxB,MAAAA,OAAO,CAAC6B,SAAR,GAAoBL,IAApB;;AACA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EACCP,OAAO,CAAC8B,QAAR,CAAiBnC,KAAK,CAACY,CAAD,CAAtB,EAA2B,CAA3B,EAA8BO,CAAC,GAAGP,CAAC,GAAGqB,UAAtC;AACD;;AACD,QAAIH,MAAJ,EAAW;AACV,UAAIC,IAAJ,EAAU;AACT,YAAI1B,OAAO,CAAC+B,WAAZ,EAAyB;AACxB/B,UAAAA,OAAO,CAAC+B,WAAR,CAAoBL,IAApB;AACA,SAFD,MAEO;AACN;AACA1B,UAAAA,OAAO,CAACgC,OAAR,GAAkBN,IAAlB;AACA,SANQ,CAOT;;AACA,OARD,MAQO;AACN,YAAI1B,OAAO,CAAC+B,WAAZ,EAAyB;AACxB/B,UAAAA,OAAO,CAAC+B,WAAR,CAAoB,EAApB;AACA,SAFD,MAEO;AACN/B,UAAAA,OAAO,CAACgC,OAAR,GAAkB,IAAlB;AACA;AACD;;AAEDhC,MAAAA,OAAO,CAACiC,WAAR,GAAsBR,MAAtB;AACAzB,MAAAA,OAAO,CAACkC,SAAR,GAAoB,KAAKC,YAAzB;AACAnC,MAAAA,OAAO,CAACoC,OAAR,GAAkB,KAAKC,UAAvB;AACArC,MAAAA,OAAO,CAACsC,QAAR,GAAmB,KAAKC,WAAxB;;AACA,WAAKhC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,CAAhB,EAAmBG,CAAC,EAApB,EACCP,OAAO,CAACwC,UAAR,CAAmB7C,KAAK,CAACY,CAAD,CAAxB,EAA6B,CAA7B,EAAgCO,CAAC,GAAGP,CAAC,GAAGqB,UAAxC;AACD;AACD;AA5G2B,CAAP,CAAtB","sourcesContent":["var Class = require('../../core/class');\nvar Base = require('./base');\n\nvar fontAnchors = { middle: 'center' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize();\n\t\tthis.draw.apply(this, arguments);\n\t},\n\n\tdraw: function(text, font, alignment, path){\n\t\tvar em;\n\t\tif (typeof font == 'string'){\n\t\t\tem = Number(/(\\d+)/.exec(font)[0]);\n\t\t} else if (font){\n\t\t\tem = parseFloat(font.fontSize || font['font-size'] || '12');\n\t\t\tfont = (font.fontStyle || font['font-style'] || '') + ' ' +\n\t\t\t\t(font.fontVariant || font['font-variant'] || '') + ' ' +\n\t\t\t\t(font.fontWeight || font['font-weight'] || '') + ' ' +\n\t\t\t\tem + 'px ' +\n\t\t\t\t(font.fontFamily || font['font-family'] || 'Arial');\n\t\t} else {\n\t\t\tfont = this._font;\n\t\t}\n\n\t\tvar lines = text && text.split(/\\r?\\n/);\n\t\tthis._font = font;\n\t\tthis._fontSize = em;\n\t\tthis._text = lines;\n\t\tthis._alignment = fontAnchors[alignment] || alignment || 'left';\n\n\t\tvar context = Base._genericContext;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tlines = this._text;\n\t\tvar l = lines.length, width = 0;\n\t\tfor (var i = 0; i < l; i++){\n\t\t\tvar w = context.measureText(lines[i]).width;\n\t\t\tif (w > width) width = w;\n\t\t}\n\t\tthis.width = width;\n\t\tthis.height = l ? l * 1.1 * em : 0;\n\t\treturn this.invalidate();\n\t},\n\n\t// Interaction\n\n\tlocalHitTest: function(x, y){\n\t\tif (!this._fill) return null;\n\t\tif (x > 0 && y > 0 && x < this.width && y < this.height){\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t},\n\n\t// Rendering\n\n\trenderShapeTo: function(context){\n\t\tif (this._invisible || !this._text || (!this._fill && !this._stroke)) {\n\t\t\treturn null;\n\t\t}\n\t\tcontext.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n\t\tvar fill = this._fill,\n\t\t    stroke = this._stroke,\n\t\t    text = this._text,\n\t\t    dash = this._strokeDash;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tvar em = this._fontSize,\n\t\t    y = em / 2,\n\t\t    lineHeight = 1.1 * em,\n\t\t    lines = text,\n\t\t    l = lines.length;\n\n\t\tif (fill){\n\t\t\tcontext.fillStyle = fill;\n\t\t\tfor (var i = 0; i < l; i++)\n\t\t\t\tcontext.fillText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t\tif (stroke){\n\t\t\tif (dash) {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(dash);\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Remove when FF supports setLineDash.\n\t\t\t\t\tcontext.mozDash = dash;\n\t\t\t\t}\n\t\t\t\t// TODO: Create fallback to other browsers.\n\t\t\t} else {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash([]);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.mozDash = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.strokeStyle = stroke;\n\t\t\tcontext.lineWidth = this._strokeWidth;\n\t\t\tcontext.lineCap = this._strokeCap;\n\t\t\tcontext.lineJoin = this._strokeJoin;\n\t\t\tfor (i = 0; i < l; i++)\n\t\t\t\tcontext.strokeText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t}\n\n});\n"]},"metadata":{},"sourceType":"script"}