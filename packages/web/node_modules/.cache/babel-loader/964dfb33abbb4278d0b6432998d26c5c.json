{"ast":null,"code":"var Class = require('../core/class');\n\nfunction elementFrom(node) {\n  if (node.toElement) return node.toElement();\n  if (node.getDOMNode) return node.getDOMNode();\n  if (node.getNode) return node.getNode();\n  return node;\n}\n\nmodule.exports = Class({\n  // conventions\n  toElement: function () {\n    return this.element;\n  },\n  getDOMNode: function () {\n    return this.toElement();\n  },\n  getNode: function () {\n    return this.toElement();\n  },\n  // placement\n  inject: function (container) {\n    (container.containerElement || elementFrom(container)).appendChild(this.element);\n    return this;\n  },\n  injectBefore: function (sibling) {\n    var element = elementFrom(sibling);\n    element.parentNode.insertBefore(this.element, element);\n    return this;\n  },\n  eject: function () {\n    var element = this.element,\n        parent = element.parentNode;\n    if (parent) parent.removeChild(element); // TODO: VML Nodes are dead after being ejected\n\n    return this;\n  },\n  // events\n  subscribe: function (type, fn, bind) {\n    if (typeof type != 'string') {\n      // listen type / fn with object\n      var subscriptions = [];\n\n      for (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\n      return function () {\n        // unsubscribe\n        for (var i = 0, l = subscriptions.length; i < l; i++) subscriptions[i]();\n\n        return this;\n      };\n    } else {\n      // listen to one\n      if (!bind) bind = this;\n      var bound;\n\n      if (typeof fn === 'function') {\n        bound = fn.bind ? fn.bind(bind) : function () {\n          return fn.apply(bind, arguments);\n        };\n      } else {\n        bound = fn;\n      }\n\n      var element = this.element;\n\n      if (element.addEventListener) {\n        element.addEventListener(type, bound, false);\n        return function () {\n          // unsubscribe\n          element.removeEventListener(type, bound, false);\n          return this;\n        };\n      } else {\n        element.attachEvent('on' + type, bound);\n        return function () {\n          // unsubscribe\n          element.detachEvent('on' + type, bound);\n          return this;\n        };\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/quickmac/Desktop/node_projects/react-native-web-workout/node_modules/art/dom/native.js"],"names":["Class","require","elementFrom","node","toElement","getDOMNode","getNode","module","exports","element","inject","container","containerElement","appendChild","injectBefore","sibling","parentNode","insertBefore","eject","parent","removeChild","subscribe","type","fn","bind","subscriptions","t","push","i","l","length","bound","apply","arguments","addEventListener","removeEventListener","attachEvent","detachEvent"],"mappings":"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","sourcesContent":["var Class = require('../core/class');\n\nfunction elementFrom(node){\n\tif (node.toElement) return node.toElement();\n\tif (node.getDOMNode) return node.getDOMNode();\n\tif (node.getNode) return node.getNode();\n\treturn node;\n}\n\nmodule.exports = Class({\n\n\t// conventions\n\n\ttoElement: function(){\n\t\treturn this.element;\n\t},\n\n\tgetDOMNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\tgetNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\t// placement\n\n\tinject: function(container){\n\t\t(container.containerElement || elementFrom(container))\n\t\t\t.appendChild(this.element);\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tvar element = elementFrom(sibling);\n\t\telement.parentNode.insertBefore(this.element, element);\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tvar element = this.element, parent = element.parentNode;\n\t\tif (parent) parent.removeChild(element); // TODO: VML Nodes are dead after being ejected\n\t\treturn this;\n\t},\n\n\t// events\n\n\tsubscribe: function(type, fn, bind){\n\t\tif (typeof type != 'string'){ // listen type / fn with object\n\t\t\tvar subscriptions = [];\n\t\t\tfor (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\t\t\treturn function(){ // unsubscribe\n\t\t\t\tfor (var i = 0, l = subscriptions.length; i < l; i++)\n\t\t\t\t\tsubscriptions[i]();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t} else { // listen to one\n\t\t\tif (!bind) bind = this;\n\t\t\tvar bound;\n\t\t\tif (typeof fn === 'function'){\n\t\t\t\tbound = fn.bind ? fn.bind(bind)\n\t\t\t\t\t: function(){ return fn.apply(bind, arguments); };\n\t\t\t} else {\n\t\t\t\tbound = fn;\n\t\t\t}\n\t\t\tvar element = this.element;\n\t\t\tif (element.addEventListener){\n\t\t\t\telement.addEventListener(type, bound, false);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.removeEventListener(type, bound, false);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\telement.attachEvent('on' + type, bound);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.detachEvent('on' + type, bound);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n});\n"]},"metadata":{},"sourceType":"script"}